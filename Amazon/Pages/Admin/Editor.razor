@page "/admin/projects/edit/{id:long}"
@page "/admin/projects/create"
@inherits OwningComponentBase<IBookRepository>

@* this is the form to create a new item and update a previous item *@

<style>
    div.validation-message {
        color: rgb(220,53,69);
        font-weight: 500
    }
</style>
<h3 class="bg-@ThemeColor text-white text-center p-1 ">@TitleText a Project </h3>

<EditForm Model="b" OnValidSubmit="SaveBook">

    <DataAnnotationsValidator></DataAnnotationsValidator>

    
    <div class="form-group">
        <label>Book Id:</label>
        <input class="form-control" disabled value="@b.BookId" />
    </div>

    <div class="form-group">
        <label>Title:</label>
        <ValidationMessage For="@(() => b.Title)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="@b.Title"></InputText>
    </div>


    <div class="form-group">
        <label>Author:</label>
        <ValidationMessage For="@(() => b.Author)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="@b.Author"></InputText>
    </div>

    <div class="form-group">
        <label>Category:</label>
        <ValidationMessage For="@(() => b.Category)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="@b.Category"></InputText>
    </div>

    <div class="form-group">
        <label>Publisher:</label>
        <ValidationMessage For="@(() => b.Publisher)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="@b.Publisher"></InputText>
    </div>

    <div class="form-group">
        <label>ISBN:</label>
        <ValidationMessage For="@(() => b.Isbn)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="@b.Isbn"></InputText>
    </div>

    <div class="form-group">
        <label>Classification:</label>
        <ValidationMessage For="@(() => b.Classification)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="@b.Classification"></InputText>
    </div>

    <div class="form-group">
        <label>Page Count:</label>
        <ValidationMessage For="@(() => b.PageCount)"></ValidationMessage>
        <InputNumber class="form-control" @bind-Value="@b.PageCount"></InputNumber>
    </div>

    <div class="form-group">
        <label>Price:</label>
        <ValidationMessage For="@(() => b.Price)"></ValidationMessage>
        <InputNumber class="form-control" @bind-Value="@b.Price"></InputNumber>
    </div>

    <button type="submit" class="btn btn-@ThemeColor">Save</button>
    <NavLink class="btn btn-secondary" href="/admin/projects">Cancel</NavLink>


</EditForm>

@code {

    public IBookRepository repo => Service;
    [Inject]
    public NavigationManager NavManager { get; set; }

    [Parameter]
    public long Id { get; set; }

    public string ThemeColor => Id == 0 ? "primary" : "warning";

    public string TitleText => Id == 0 ? "Create" : "Edit";

    public Book b { get; set; } = new Book();


    protected override void OnParametersSet()
    {
        if (Id != 0) //existing book
        {
            b = repo.Books.FirstOrDefault(x => x.BookId == Id);
        }
    }


    public void SaveBook()
    {
        if (Id == 0) // new book
        {
            repo.CreateBook(b);
        }
        else
        {
            repo.SaveBook(b);
        }
        NavManager.NavigateTo("/admin/projects");
    }



}

